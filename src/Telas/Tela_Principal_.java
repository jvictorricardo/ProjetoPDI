package Telas;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import Processamento.Processamento_Imagem_;
import Processamento.DeteccaoFinal;
import java.awt.Color;

/**
 * @author João Victor do Rozário Recla - 2022/2
 */
public class Tela_Principal_ extends javax.swing.JFrame {
    
    public File Img_original;
    public boolean Img_carregada;
    public BufferedImage Img_atual;
    public BufferedImage Copia_deteccao;
    public File Caminho = new File("/home/");
    public boolean Img_RI, Img_BI, Img_segmentada, Detectada;
    
    /**
     * Creates new form TelaPrincipal
     */
    public Tela_Principal_() {
        initComponents();
        jScrollPane1.getViewport().setBackground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tela_ = new javax.swing.JLabel();
        Menus = new javax.swing.JMenuBar();
        Menu_Arquivo_ = new javax.swing.JMenu();
        Carregar_Imagem_ = new javax.swing.JMenuItem();
        ___Separador_01 = new javax.swing.JPopupMenu.Separator();
        Restaurar_Imagem_ = new javax.swing.JMenuItem();
        ___Separador_02 = new javax.swing.JPopupMenu.Separator();
        Salvar_ = new javax.swing.JMenuItem();
        ___Separador_03 = new javax.swing.JPopupMenu.Separator();
        Sair_ = new javax.swing.JMenuItem();
        Menu_Blueness_Index_ = new javax.swing.JMenu();
        Blueness_ = new javax.swing.JMenu();
        Aplicar_BI_Imagem_Joao_ = new javax.swing.JMenuItem();
        ___Separador_06 = new javax.swing.JPopupMenu.Separator();
        Aplicar_BI_Joao_Lote_ = new javax.swing.JMenuItem();
        Menu_Blueness_Index_1 = new javax.swing.JMenu();
        Blueness_1 = new javax.swing.JMenu();
        Aplicar_Bl_Imagem_Ant_ = new javax.swing.JMenuItem();
        ___Separador_7 = new javax.swing.JPopupMenu.Separator();
        Aplicar_BI_Ant_Lote = new javax.swing.JMenuItem();
        Menu_Blueness_Index_2 = new javax.swing.JMenu();
        Blueness_2 = new javax.swing.JMenu();
        Aplicar_AJ_menu = new javax.swing.JMenuItem();
        ___Separador_8 = new javax.swing.JPopupMenu.Separator();
        Aplicar_BI_Lote_2 = new javax.swing.JMenuItem();
        Menu_Segmentacao_ = new javax.swing.JMenu();
        Binarizacao_Otsu_ = new javax.swing.JMenu();
        Aplicar_Otsu_Imagem_ = new javax.swing.JMenuItem();
        ___Separador_07 = new javax.swing.JPopupMenu.Separator();
        Aplicar_Otsu_Lote_ = new javax.swing.JMenuItem();
        ___Separador_04 = new javax.swing.JPopupMenu.Separator();
        Binarizacao_Fuzzy_Huang_ = new javax.swing.JMenu();
        Aplicar_FuzzyHuang_Imagem_ = new javax.swing.JMenuItem();
        ___Separador_08 = new javax.swing.JPopupMenu.Separator();
        Aplicar_FuzzyHuang_Lote_ = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Binarizacao_Fuzzy_Huang_1 = new javax.swing.JMenu();
        Aplicar_FuzzyHuang_Imagem_1 = new javax.swing.JMenuItem();
        ___Separador_9 = new javax.swing.JPopupMenu.Separator();
        Aplicar_FuzzyHuang_Lote_1 = new javax.swing.JMenuItem();
        Deteccao_Final_Menu = new javax.swing.JMenu();
        Sobre_1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Sobre_2 = new javax.swing.JMenuItem();
        Menu_Outros_ = new javax.swing.JMenu();
        Sobre_ = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        jMenuItem5.setText("jMenuItem5");

        jMenuItem12.setText("jMenuItem12");

        jMenuItem14.setText("jMenuItem14");

        jMenuItem15.setText("jMenuItem15");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Detecção de imagens por índices de cor Blueness - João Victor Ricardo / Antonielly Bergami");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(MAXIMIZED_BOTH);

        jScrollPane1.setToolTipText("");
        jScrollPane1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        Tela_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Tela_.setToolTipText("");
        Tela_.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane1.setViewportView(Tela_);

        Menus.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.gray, java.awt.Color.black));
        Menus.setAlignmentY(0.5F);
        Menus.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        Menus.setMargin(new java.awt.Insets(20, 20, 20, 20));
        Menus.setMaximumSize(new java.awt.Dimension(479, 32775));
        Menus.setPreferredSize(new java.awt.Dimension(480, 35));

        Menu_Arquivo_.setBorder(null);
        Menu_Arquivo_.setText("Arquivo");
        Menu_Arquivo_.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Arquivo_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Arquivo_.setPreferredSize(new java.awt.Dimension(70, 25));

        Carregar_Imagem_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Carregar_Imagem_.setText("Carregar imagem");
        Carregar_Imagem_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Carregar_Imagem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Carregar_Imagem_ActionPerformed(evt);
            }
        });
        Menu_Arquivo_.add(Carregar_Imagem_);
        Menu_Arquivo_.add(___Separador_01);

        Restaurar_Imagem_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Restaurar_Imagem_.setText("Restaurar original");
        Restaurar_Imagem_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Restaurar_Imagem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Restaurar_Imagem_ActionPerformed(evt);
            }
        });
        Menu_Arquivo_.add(Restaurar_Imagem_);
        Menu_Arquivo_.add(___Separador_02);

        Salvar_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Salvar_.setText("Salvar");
        Salvar_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Salvar_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Salvar_ActionPerformed(evt);
            }
        });
        Menu_Arquivo_.add(Salvar_);
        Menu_Arquivo_.add(___Separador_03);

        Sair_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Sair_.setText("Sair");
        Sair_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Sair_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sair_ActionPerformed(evt);
            }
        });
        Menu_Arquivo_.add(Sair_);

        Menus.add(Menu_Arquivo_);

        Menu_Blueness_Index_.setBorder(null);
        Menu_Blueness_Index_.setText("Blueness João");
        Menu_Blueness_Index_.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Blueness_Index_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Blueness_Index_.setPreferredSize(new java.awt.Dimension(120, 25));

        Blueness_.setBorder(null);
        Blueness_.setText("Blueness");
        Blueness_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Blueness_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Blueness_.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_BI_Imagem_Joao_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_BI_Imagem_Joao_.setText("Aplicar na imagem");
        Aplicar_BI_Imagem_Joao_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_BI_Imagem_Joao_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_BI_Imagem_Joao_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_BI_Imagem_Joao_ActionPerformed(evt);
            }
        });
        Blueness_.add(Aplicar_BI_Imagem_Joao_);
        Blueness_.add(___Separador_06);

        Aplicar_BI_Joao_Lote_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_BI_Joao_Lote_.setText("Aplicar em lote");
        Aplicar_BI_Joao_Lote_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_BI_Joao_Lote_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_BI_Joao_Lote_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_BI_Joao_Lote_ActionPerformed(evt);
            }
        });
        Blueness_.add(Aplicar_BI_Joao_Lote_);

        Menu_Blueness_Index_.add(Blueness_);

        Menus.add(Menu_Blueness_Index_);

        Menu_Blueness_Index_1.setBorder(null);
        Menu_Blueness_Index_1.setText("Blueness Antônio");
        Menu_Blueness_Index_1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Blueness_Index_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Blueness_Index_1.setMaximumSize(new java.awt.Dimension(140, 32767));
        Menu_Blueness_Index_1.setMinimumSize(new java.awt.Dimension(140, 25));
        Menu_Blueness_Index_1.setPreferredSize(new java.awt.Dimension(120, 25));

        Blueness_1.setBorder(null);
        Blueness_1.setText("Blueness");
        Blueness_1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Blueness_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Blueness_1.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_Bl_Imagem_Ant_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_Bl_Imagem_Ant_.setText("Aplicar na imagem");
        Aplicar_Bl_Imagem_Ant_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_Bl_Imagem_Ant_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_Bl_Imagem_Ant_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_Bl_Imagem_Ant_ActionPerformed(evt);
            }
        });
        Blueness_1.add(Aplicar_Bl_Imagem_Ant_);
        Blueness_1.add(___Separador_7);

        Aplicar_BI_Ant_Lote.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_BI_Ant_Lote.setText("Aplicar em lote");
        Aplicar_BI_Ant_Lote.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_BI_Ant_Lote.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_BI_Ant_Lote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_BI_Ant_LoteActionPerformed(evt);
            }
        });
        Blueness_1.add(Aplicar_BI_Ant_Lote);

        Menu_Blueness_Index_1.add(Blueness_1);

        Menus.add(Menu_Blueness_Index_1);

        Menu_Blueness_Index_2.setBorder(null);
        Menu_Blueness_Index_2.setText("Blueness Antonielly e joão");
        Menu_Blueness_Index_2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Blueness_Index_2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Blueness_Index_2.setMinimumSize(new java.awt.Dimension(190, 25));
        Menu_Blueness_Index_2.setPreferredSize(new java.awt.Dimension(190, 25));

        Blueness_2.setBorder(null);
        Blueness_2.setText("Blueness");
        Blueness_2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Blueness_2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Blueness_2.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_AJ_menu.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_AJ_menu.setText("Aplicar na imagem");
        Aplicar_AJ_menu.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_AJ_menu.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_AJ_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_AJ_menuActionPerformed(evt);
            }
        });
        Blueness_2.add(Aplicar_AJ_menu);
        Blueness_2.add(___Separador_8);

        Aplicar_BI_Lote_2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_BI_Lote_2.setText("Aplicar em lote");
        Aplicar_BI_Lote_2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_BI_Lote_2.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_BI_Lote_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_BI_Lote_2ActionPerformed(evt);
            }
        });
        Blueness_2.add(Aplicar_BI_Lote_2);

        Menu_Blueness_Index_2.add(Blueness_2);

        Menus.add(Menu_Blueness_Index_2);

        Menu_Segmentacao_.setBorder(null);
        Menu_Segmentacao_.setText("Segmentação");
        Menu_Segmentacao_.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Segmentacao_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Segmentacao_.setPreferredSize(new java.awt.Dimension(120, 17));

        Binarizacao_Otsu_.setBorder(null);
        Binarizacao_Otsu_.setText("Binarização de Otsu");
        Binarizacao_Otsu_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Binarizacao_Otsu_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Binarizacao_Otsu_.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_Otsu_Imagem_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_Otsu_Imagem_.setText("Aplicar na imagem");
        Aplicar_Otsu_Imagem_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_Otsu_Imagem_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_Otsu_Imagem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_Otsu_Imagem_ActionPerformed(evt);
            }
        });
        Binarizacao_Otsu_.add(Aplicar_Otsu_Imagem_);
        Binarizacao_Otsu_.add(___Separador_07);

        Aplicar_Otsu_Lote_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_Otsu_Lote_.setText("Aplicar em lote");
        Aplicar_Otsu_Lote_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_Otsu_Lote_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_Otsu_Lote_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_Otsu_Lote_ActionPerformed(evt);
            }
        });
        Binarizacao_Otsu_.add(Aplicar_Otsu_Lote_);

        Menu_Segmentacao_.add(Binarizacao_Otsu_);
        Menu_Segmentacao_.add(___Separador_04);

        Binarizacao_Fuzzy_Huang_.setBorder(null);
        Binarizacao_Fuzzy_Huang_.setText("Bin Fuzzy de Huang");
        Binarizacao_Fuzzy_Huang_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Binarizacao_Fuzzy_Huang_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Binarizacao_Fuzzy_Huang_.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_FuzzyHuang_Imagem_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_FuzzyHuang_Imagem_.setText("Aplicar na imagem");
        Aplicar_FuzzyHuang_Imagem_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_FuzzyHuang_Imagem_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_FuzzyHuang_Imagem_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_FuzzyHuang_Imagem_ActionPerformed(evt);
            }
        });
        Binarizacao_Fuzzy_Huang_.add(Aplicar_FuzzyHuang_Imagem_);
        Binarizacao_Fuzzy_Huang_.add(___Separador_08);

        Aplicar_FuzzyHuang_Lote_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_FuzzyHuang_Lote_.setText("Aplicar em lote");
        Aplicar_FuzzyHuang_Lote_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_FuzzyHuang_Lote_.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_FuzzyHuang_Lote_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_FuzzyHuang_Lote_ActionPerformed(evt);
            }
        });
        Binarizacao_Fuzzy_Huang_.add(Aplicar_FuzzyHuang_Lote_);

        Menu_Segmentacao_.add(Binarizacao_Fuzzy_Huang_);
        Menu_Segmentacao_.add(jSeparator1);

        Binarizacao_Fuzzy_Huang_1.setBorder(null);
        Binarizacao_Fuzzy_Huang_1.setText("Bin de Pun");
        Binarizacao_Fuzzy_Huang_1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Binarizacao_Fuzzy_Huang_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Binarizacao_Fuzzy_Huang_1.setPreferredSize(new java.awt.Dimension(170, 25));

        Aplicar_FuzzyHuang_Imagem_1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_FuzzyHuang_Imagem_1.setText("Aplicar na imagem");
        Aplicar_FuzzyHuang_Imagem_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_FuzzyHuang_Imagem_1.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_FuzzyHuang_Imagem_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_FuzzyHuang_Imagem_1ActionPerformed(evt);
            }
        });
        Binarizacao_Fuzzy_Huang_1.add(Aplicar_FuzzyHuang_Imagem_1);
        Binarizacao_Fuzzy_Huang_1.add(___Separador_9);

        Aplicar_FuzzyHuang_Lote_1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Aplicar_FuzzyHuang_Lote_1.setText("Aplicar em lote");
        Aplicar_FuzzyHuang_Lote_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Aplicar_FuzzyHuang_Lote_1.setPreferredSize(new java.awt.Dimension(150, 25));
        Aplicar_FuzzyHuang_Lote_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Aplicar_FuzzyHuang_Lote_1ActionPerformed(evt);
            }
        });
        Binarizacao_Fuzzy_Huang_1.add(Aplicar_FuzzyHuang_Lote_1);

        Menu_Segmentacao_.add(Binarizacao_Fuzzy_Huang_1);

        Menus.add(Menu_Segmentacao_);

        Deteccao_Final_Menu.setBorder(null);
        Deteccao_Final_Menu.setText("Detecção Final");
        Deteccao_Final_Menu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Deteccao_Final_Menu.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Deteccao_Final_Menu.setPreferredSize(new java.awt.Dimension(120, 25));
        Deteccao_Final_Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Deteccao_Final_MenuActionPerformed(evt);
            }
        });

        Sobre_1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Sobre_1.setText("Aplicar na imagem");
        Sobre_1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Sobre_1.setPreferredSize(new java.awt.Dimension(170, 25));
        Sobre_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sobre_1ActionPerformed(evt);
            }
        });
        Deteccao_Final_Menu.add(Sobre_1);
        Deteccao_Final_Menu.add(jSeparator2);

        Sobre_2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Sobre_2.setText("Aplicar em lote");
        Sobre_2.setEnabled(false);
        Sobre_2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Sobre_2.setPreferredSize(new java.awt.Dimension(170, 25));
        Sobre_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sobre_2ActionPerformed(evt);
            }
        });
        Deteccao_Final_Menu.add(Sobre_2);

        Menus.add(Deteccao_Final_Menu);

        Menu_Outros_.setBorder(null);
        Menu_Outros_.setText("Outros");
        Menu_Outros_.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Menu_Outros_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Menu_Outros_.setPreferredSize(new java.awt.Dimension(60, 25));

        Sobre_.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        Sobre_.setText("Sobre o software");
        Sobre_.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Sobre_.setPreferredSize(new java.awt.Dimension(170, 25));
        Sobre_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sobre_ActionPerformed(evt);
            }
        });
        Menu_Outros_.add(Sobre_);

        Menus.add(Menu_Outros_);

        setJMenuBar(Menus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /*  Metodo para carregar uma imagem para o sistema. */
    private void Carregar_Imagem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Carregar_Imagem_ActionPerformed

        // Configura e abre uma janela de dialogo.
        JFileChooser Fs = new JFileChooser(Caminho);
        Fs.setFileFilter(new FileNameExtensionFilter("Arquivos de Imagem (png, jpg, jpeg, bmp)", "png", "jpg", "jpeg", "bmp"));
        Fs.setAcceptAllFileFilterUsed(false);
        Fs.setDialogTitle("Selecione um arquivo de imagem...");
        int Retorno = Fs.showOpenDialog(this);
        
        // Seleciona a imagem.
        if(Retorno == JFileChooser.APPROVE_OPTION){
            
            try {
                
                // Carrega a imagem para o sistema.
                Img_original = Fs.getSelectedFile();
                Img_atual    = ImageIO.read(Img_original);
                Copia_deteccao    = ImageIO.read(Img_original);
                Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                Img_carregada = true;

                // Atualiza o caminho com o diretorio da pasta selecionada.
                Caminho = Fs.getCurrentDirectory();
            } catch (IOException ex) {
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Carregar_Imagem_ActionPerformed

    
    /*  Metodo para salvar uma imagem.  */
    private void Salvar_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Salvar_ActionPerformed
        
        JFrame F = new JFrame();
        
        if(Img_carregada){
            
            // Configura e abre uma janela de dialogo.
            JFileChooser Fs = new JFileChooser(new File(Img_original.getParent()));
            Fs.setFileFilter(new FileNameExtensionFilter("PNG Images", "png"));
            Fs.setDialogTitle("Escolha onde salvar a imagem processada...");
            int Retorno = Fs.showSaveDialog(this);

            // Seleciona a pasta.
            if(Retorno == JFileChooser.APPROVE_OPTION){
                
                File Fo = new File(Fs.getSelectedFile().getPath() + (Img_RI ? "_Redness" : "") + (Img_BI ? "_BlueGabautz" : "") + (Img_segmentada ? "_Segmentacao" : "") + ".png");
                
                try {
                    
                    ImageIO.write(Img_atual, "png", Fo);
                    Img_RI = Img_BI = Img_segmentada = false;
                    JOptionPane.showMessageDialog(F, "Imagem salva com sucesso.");
                } catch (IOException ex) {
                    
                    JOptionPane.showMessageDialog(F, "Não foi possível salvar a imagem!");
                    Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Salvar_ActionPerformed

    
    /*  Metodo para restaurar uma imagem carregada. */
    private void Restaurar_Imagem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Restaurar_Imagem_ActionPerformed
        
        if(Img_carregada){            
            try {
                Img_atual = ImageIO.read(Img_original);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
        }
    }//GEN-LAST:event_Restaurar_Imagem_ActionPerformed

    
    /*  Metodo para exibir as informacoes sobre o software. */
    private void Sobre_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sobre_ActionPerformed
        
        JFrame F = new JFrame();
        JOptionPane.showMessageDialog(F, "Programa desenvolvido e implementado por João Victor Ricardo de Andrade"
                                       + "e Antonielly Bergami Ribeiro em 2023/2, na disciplina de PDI \nministrada pelo Prof. Jacques Facon.");
    }//GEN-LAST:event_Sobre_ActionPerformed

    
    /*  Metodo para sair do sistema.    */
    private void Sair_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sair_ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Sair_ActionPerformed

    
    
    
    /*  Metodo para aplicar o algoritmo de segmentacao
        "Binarizacao Otsu" em um lote de imagens.   */
    private void Aplicar_Otsu_Lote_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_Otsu_Lote_ActionPerformed
        
        Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Aplicar_segmentacao = true;
        Tela.Metodo_nome         = "_BinarizacaoOtsu";
        Tela.Segmentacao_tipo    = 1;
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_Otsu_Lote_ActionPerformed

    
    /*  Metodo para aplicar o algoritmo de segmentacao
        "Binarizacao Otsu" em uma imagem.   */
    private void Aplicar_Otsu_Imagem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_Otsu_Imagem_ActionPerformed
        
        JFrame F = new JFrame();
        
        if(Img_carregada){
            
            try{
                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.Segment_(Img_atual, 1);
                
                if(Img_processada == null) {
                    
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                }else{
                    
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_segmentada = true;
                }
            }catch( NullPointerException | IllegalArgumentException ex){
                
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_Otsu_Imagem_ActionPerformed

    
    /*  Metodo para aplicar o algoritmo de BI, para deteccao do indice de cor
        Blueness (Desenvolvido por João Victor RR em 2022/2), em uma imagem.    */
    private void Aplicar_BI_Imagem_Joao_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_BI_Imagem_Joao_ActionPerformed
        
        JFrame F = new JFrame();
        
        if(Img_carregada){
            
            try{
                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.BI_(Img_atual);
                 
                if(Img_processada == null) {
                    
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                }else{
                    
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_BI = true;
                }
            }catch(NullPointerException | IllegalArgumentException ex){
                
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_BI_Imagem_Joao_ActionPerformed

    
    /*  Metodo para aplicar o algoritmo de BI, para deteccao
        do indice de cor Blueness, em um lote de imagens.   */
    private void Aplicar_BI_Joao_Lote_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_BI_Joao_Lote_ActionPerformed
        Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Detectar_BI = true;
        Tela.Metodo_nome = "_BlueGabautz";
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_BI_Joao_Lote_ActionPerformed

    
    
    /*  Metodo para aplicar o algoritmo de segmentacao
        "Binarizacao Fuzzy Huang" em uma imagem.    */
    private void Aplicar_FuzzyHuang_Imagem_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_FuzzyHuang_Imagem_ActionPerformed
        
        JFrame F = new JFrame();
        
        if(Img_carregada){
            
            try{
                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.Segment_(Img_atual, 2);
                
                if(Img_processada == null) {
                    
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                }else{
                    
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_segmentada = true;
                }
            }catch(NullPointerException | IllegalArgumentException ex){
                
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_FuzzyHuang_Imagem_ActionPerformed

    
    /*  Metodo para aplicar o algoritmo de segmentacao
        "Binarizacao Fuzzy Huang" em um lote de imagens.    */
    private void Aplicar_FuzzyHuang_Lote_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_FuzzyHuang_Lote_ActionPerformed
        
        Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Aplicar_segmentacao = true;
        Tela.Metodo_nome         = "_BinFuzHuang";
        Tela.Segmentacao_tipo    = 2;
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_FuzzyHuang_Lote_ActionPerformed

    private void Aplicar_Bl_Imagem_Ant_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_Bl_Imagem_Ant_ActionPerformed
        JFrame F = new JFrame();
        
        if(Img_carregada){            
            try{                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.BIA_(Img_atual);
                 
                if(Img_processada == null) {
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                }
                else{
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_BI = true;
                }
            }catch(NullPointerException | IllegalArgumentException ex){
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_Bl_Imagem_Ant_ActionPerformed

    private void Aplicar_BI_Ant_LoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_BI_Ant_LoteActionPerformed
        Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Detectar_BI = true;
        Tela.Metodo_nome = "_BlueGasparini";
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_BI_Ant_LoteActionPerformed

    private void Aplicar_AJ_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_AJ_menuActionPerformed
        JFrame F = new JFrame();
        
        if(Img_carregada){
            
            try{
                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.BIAJ_(Img_atual);
                 
                if(Img_processada == null) {
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                }
                else{
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_BI = true;
                }
            }catch(NullPointerException | IllegalArgumentException ex){
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a deteccao de BI!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_AJ_menuActionPerformed

    private void Aplicar_BI_Lote_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_BI_Lote_2ActionPerformed
        Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Detectar_BI = true;
        Tela.Metodo_nome = "_Combinacao";
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_BI_Lote_2ActionPerformed

    private void Aplicar_FuzzyHuang_Imagem_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_FuzzyHuang_Imagem_1ActionPerformed
         JFrame F = new JFrame();
        
        if(Img_carregada){
            
            try{
                
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = Processamento_Imagem_.Segment_(Img_atual, 3);
                
                if(Img_processada == null) {
                    
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                }else{
                    
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Img_segmentada = true;
                }
            }catch( NullPointerException | IllegalArgumentException ex){
                
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a segmentação!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Aplicar_FuzzyHuang_Imagem_1ActionPerformed

    private void Aplicar_FuzzyHuang_Lote_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Aplicar_FuzzyHuang_Lote_1ActionPerformed
         Tela_Aplicacao_Lote_ Tela = new Tela_Aplicacao_Lote_();
        Tela.setLocationRelativeTo(null);
        Tela.Aplicar_segmentacao = true;
        Tela.Metodo_nome         = "_BinPun";
        Tela.Segmentacao_tipo    = 3;
        Tela.setVisible(true);
    }//GEN-LAST:event_Aplicar_FuzzyHuang_Lote_1ActionPerformed

    private void Deteccao_Final_MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Deteccao_Final_MenuActionPerformed
        //placeholder :D
    }//GEN-LAST:event_Deteccao_Final_MenuActionPerformed

    private void Sobre_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sobre_1ActionPerformed
        //novo jframe que recebe o resultado
        JFrame F = new JFrame();
        
        if(Img_carregada){//Se tiver uma imagem carregada, vamos armazenar a versão sem modificações
            try {
                Copia_deteccao = ImageIO.read(Img_original);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
            try{
                // Aplica o algoritmo na imagem atual.
                BufferedImage Img_processada = DeteccaoFinal.Aplicar_Deteccao_Final_(Img_atual, Copia_deteccao);
                
                if(!Img_segmentada | (Img_processada == null)) { //Se a imagem carregada ainda não for binária
                    JOptionPane.showMessageDialog(F, "Não foi possível aplicar a detecção final!");
                }else{
                    Img_atual = Img_processada;
                    Tela_.setIcon(new javax.swing.ImageIcon(Img_atual));
                    Detectada = true;
                }
            }catch(NullPointerException | IllegalArgumentException ex){
                JOptionPane.showMessageDialog(F, "Não foi possível aplicar a detecção final!");
                Logger.getLogger(Tela_Principal_.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(F, "Nenhuma imagem foi carregada!");
        }
    }//GEN-LAST:event_Sobre_1ActionPerformed

    private void Sobre_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sobre_2ActionPerformed
        Tela_Aplicacao_Lote_DeteccaoFinal Tela = new Tela_Aplicacao_Lote_DeteccaoFinal();
        Tela.setLocationRelativeTo(null);
        Tela.setVisible(true);
    }//GEN-LAST:event_Sobre_2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Principal_().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Aplicar_AJ_menu;
    private javax.swing.JMenuItem Aplicar_BI_Ant_Lote;
    private javax.swing.JMenuItem Aplicar_BI_Imagem_Joao_;
    private javax.swing.JMenuItem Aplicar_BI_Joao_Lote_;
    private javax.swing.JMenuItem Aplicar_BI_Lote_2;
    private javax.swing.JMenuItem Aplicar_Bl_Imagem_Ant_;
    private javax.swing.JMenuItem Aplicar_FuzzyHuang_Imagem_;
    private javax.swing.JMenuItem Aplicar_FuzzyHuang_Imagem_1;
    private javax.swing.JMenuItem Aplicar_FuzzyHuang_Lote_;
    private javax.swing.JMenuItem Aplicar_FuzzyHuang_Lote_1;
    private javax.swing.JMenuItem Aplicar_Otsu_Imagem_;
    private javax.swing.JMenuItem Aplicar_Otsu_Lote_;
    private javax.swing.JMenu Binarizacao_Fuzzy_Huang_;
    private javax.swing.JMenu Binarizacao_Fuzzy_Huang_1;
    private javax.swing.JMenu Binarizacao_Otsu_;
    private javax.swing.JMenu Blueness_;
    private javax.swing.JMenu Blueness_1;
    private javax.swing.JMenu Blueness_2;
    private javax.swing.JMenuItem Carregar_Imagem_;
    private javax.swing.JMenu Deteccao_Final_Menu;
    private javax.swing.JMenu Menu_Arquivo_;
    private javax.swing.JMenu Menu_Blueness_Index_;
    private javax.swing.JMenu Menu_Blueness_Index_1;
    private javax.swing.JMenu Menu_Blueness_Index_2;
    private javax.swing.JMenu Menu_Outros_;
    private javax.swing.JMenu Menu_Segmentacao_;
    private javax.swing.JMenuBar Menus;
    private javax.swing.JMenuItem Restaurar_Imagem_;
    private javax.swing.JMenuItem Sair_;
    private javax.swing.JMenuItem Salvar_;
    private javax.swing.JMenuItem Sobre_;
    private javax.swing.JMenuItem Sobre_1;
    private javax.swing.JMenuItem Sobre_2;
    private javax.swing.JLabel Tela_;
    private javax.swing.JPopupMenu.Separator ___Separador_01;
    private javax.swing.JPopupMenu.Separator ___Separador_02;
    private javax.swing.JPopupMenu.Separator ___Separador_03;
    private javax.swing.JPopupMenu.Separator ___Separador_04;
    private javax.swing.JPopupMenu.Separator ___Separador_06;
    private javax.swing.JPopupMenu.Separator ___Separador_07;
    private javax.swing.JPopupMenu.Separator ___Separador_08;
    private javax.swing.JPopupMenu.Separator ___Separador_7;
    private javax.swing.JPopupMenu.Separator ___Separador_8;
    private javax.swing.JPopupMenu.Separator ___Separador_9;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
